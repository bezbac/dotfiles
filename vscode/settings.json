{
  "editor.fontSize": 14,
  "editor.fontFamily": "Fira Code",
  "editor.minimap.renderCharacters": false,
  "editor.minimap.showSlider": "always",
  "terminal.external.osxExec": "iTerm2.app",
  "terminal.integrated.fontSize": 14,
  "window.zoomLevel": 0,
  // Set terminal shell to fish
  "terminal.integrated.shell.osx": "/usr/local/bin/fish",
  "extensions.ignoreRecommendations": true,
  "workbench.statusBar.feedback.visible": false,
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // Fix emmet in react
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "vue-html": "html"
  },
  "emmet.syntaxProfiles": {
    "javascript": "jsx"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "git.confirmSync": false,
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "typescript.updateImportsOnFileMove.enabled": "never",
  "workbench.iconTheme": "vs-seti",
  "todo-tree.tree.showScanModeButton": false,
  "workbench.colorTheme": "One Dark Pro",
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.startupEditor": "welcomePage",
  "diffEditor.ignoreTrimWhitespace": false,
  "vscode-neovim.neovimInitVimPaths.darwin": "neovim",
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "files.exclude": {
    "**/node_modules": true
  },
  "jupyter.askForKernelRestart": false,
  "workbench.editorAssociations": [
    {
      "viewType": "jupyter.notebook.ipynb",
      "filenamePattern": "*.ipynb"
    }
  ],
  "customizeUI.activityBar": "wide",
  "customizeUI.titleBar": "inline",
  "window.titleBarStyle": "native",
  "scss.validate": false,
  "editor.quickSuggestions": {
    "strings": true
  },
  "editor.autoClosingQuotes": "always",
  "tailwindCSS.experimental.classRegex": [
    "tw`([^`]*)", // tw`...`
    "tw=\"([^\"]*)", // <div tw="..." />
    "tw={\"([^\"}]*)", // <div tw={"..."} />
    "tw\\.\\w+`([^`]*)", // tw.xxx`...`
    "tw\\(.*?\\)`([^`]*)" // tw(Component)`...`
  ],
  "tailwindCSS.includeLanguages": {
    "typescript": "javascript",
    "typescriptreact": "javascript"
  }
}
