[
  { "key": "shift+alt+g", "command": "editor.action.previousMatchFindAction", "when": "editorFocus" },
  { "key": "shift+cmd+g", "command": "-editor.action.previousMatchFindAction", "when": "editorFocus" },
  { "key": "shift+alt+g", "command": "workbench.action.terminal.findPrevious", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "shift+cmd+g", "command": "-workbench.action.terminal.findPrevious", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "shift+alt+g", "command": "workbench.action.terminal.openDetectedLink", "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'" },
  { "key": "shift+cmd+g", "command": "-workbench.action.terminal.openDetectedLink", "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'" },
  { "key": "shift+cmd+g", "command": "workbench.view.scm", "when": "workbench.scm.active" },
  { "key": "ctrl+shift+g", "command": "-workbench.view.scm", "when": "workbench.scm.active" },
  { "key": "shift+cmd+g", "command": "workbench.view.scm", "when": "workbench.scm.active && !gitlens:djkkjisabled && config.gitlens.keymap == 'chorded'" },
  { "key": "ctrl+shift+g", "command": "-workbench.view.scm", "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'" },

  // Improve list navigation (e.g. file explorer)
  { "key": "j", "command": "list.focusDown", "when": "listFocus && !inputFocus" },
  { "key": "k", "command": "list.focusUp", "when": "listFocus && !inputFocus" },
  { "key": "ctrl+u", "command": "list.focusPageUp", "when": "listFocus && !inputFocus" },
  { "key": "ctrl+d", "command": "list.focusPageDown", "when": "listFocus && !inputFocus" },

  { "key": "l", "command": "list.expand", "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus" },
  { "key": "right", "command": "list.expand", "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus" },

  { "key": "h", "command": "list.collapse", "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus" },
  { "key": "left", "command": "list.collapse", "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus" },

  { "key": "ctrl+h", "command": "list.collapseAll", "when": "listFocus && !inputFocus" },
  { "key": "ctrl+left", "command": "list.collapseAll", "when": "listFocus && !inputFocus" },

  // Improved explorer keybindings
  { "key": "ctrl+n", "command": "explorer.newFile", "when": "explorerViewletFocus" },
  { "key": "ctrl+shift+n", "command": "explorer.newFolder", "when": "explorerViewletFocus" },
  { "key": "shift+cmd+c", "command": "workbench.files.action.collapseExplorerFolders" },

  // Open file and focus
  { "key": "shift+space", "command": "explorer.openAndPassFocus", "when": "explorerViewletFocus" },

  // Extension keybindings
  {
    "key": "shift+cmd+\\",
    "command": "runCommands",
    "args": {
      "commands": [
        "magit.status",
        {
          "command": "dance.modes.set",
          "args": { "mode": "magit" }
        }
      ]
    }
  },

  // Run hurl with cmd+enter
  {
    "key": "cmd+enter",
    "command": "hurl-runner.runFile",
    "when": "editorLangId == hurl"
  },

  //
  // Custom dance keybindings
  //

  // Left and right bracket menus
  { "key": "[", "command": "dance.openMenu", "args": { "menu": "left-bracket-hx", "pass": [{ "shift": "jump" }] }, "when": "editorTextFocus && dance.mode == 'helix/normal' || editorTextFocus && dance.mode == 'helix/select'" },
  { "key": "]", "command": "dance.openMenu", "args": { "menu": "right-bracket-hx", "pass": [{ "shift": "jump" }] }, "when": "editorTextFocus && dance.mode == 'helix/normal' || editorTextFocus && dance.mode == 'helix/select'" },
  { "key": "[", "command": "dance.openMenu", "args": { "menu": "left-bracket-hx", "pass": [{ "shift": "extend" }] }, "when": "editorTextFocus && dance.mode == 'helix/select'" },
  { "key": "]", "command": "dance.openMenu", "args": { "menu": "right-bracket-hx", "pass": [{ "shift": "extend" }] }, "when": "editorTextFocus && dance.mode == 'helix/select'" },

  // Support space menu in editor
  { "key": "space", "command": "dance.openMenu", "args": { "menu": "leader-hx", "pass": [{ "shift": "jump" }] }, "when": "editorTextFocus && dance.mode == 'helix/normal' || editorTextFocus && dance.mode == 'helix/select'" },
  { "key": "space", "command": "dance.openMenu", "args": { "menu": "leader-hx", "pass": [{ "shift": "extend" }] }, "when": "editorTextFocus && dance.mode == 'helix/select'" },

  // Support space menu outside of editor
  { "key": "space", "command": "dance.openMenu", "args": { "menu": "leader-hx", "pass": [{ "shift": "jump" }] }, "when": "!inputFocus && !(explorerViewletFocus && listHasSelectionOrFocus) && !view.prStatus:github.visible" },

  // Open command pallete using ":"
  { "key": ":", "command": "workbench.action.showCommands", "when": "editorTextFocus && dance.mode == 'helix/normal' || editorTextFocus && dance.mode == 'helix/select'" },

  // Fold / unfold code
  { "key": "ctrl+[", "command": "editor.fold", "when": "editorTextFocus && foldingEnabled && (dance.mode == 'helix/normal' || dance.mode == 'helix/insert')" },
  { "key": "ctrl+]", "command": "editor.unfold", "when": "editorTextFocus && foldingEnabled && (dance.mode == 'helix/normal' || dance.mode == 'helix/insert')" },

  // Magit support in dance
  // See: https://github.com/71/dance/wiki/Magit-support
  { "key": "escape", "command": "runCommands", "args": { "commands": [{ "command": "dance.modes.set", "args": { "mode": "magit" } }] }, "when": "editorTextFocus && editorLangId == 'magit'" },

  { "key": "j", "command": "dance.select.down.jump", "when": "editorTextFocus && editorLangId == 'magit'" },
  { "key": "k", "command": "dance.select.up.jump", "when": "editorTextFocus && editorLangId == 'magit'" },

  { "key": "ctrl+u", "command": "dance.select.vertically", "args": { "direction": -1, "by": "halfPage", "shift": "jump" }, "when": "editorTextFocus && editorLangId == 'magit'" },
  { "key": "ctrl+d", "command": "dance.select.vertically", "args": { "direction": 1, "by": "halfPage", "shift": "jump" }, "when": "editorTextFocus && editorLangId == 'magit'" },

  { "key": "k", "command": "-magit.discard-at-point", "when": "editorTextFocus && editorLangId == 'magit'" },
  { "key": "ctrl+k", "command": "magit.discard-at-point", "when": "editorTextFocus && editorLangId == 'magit'" },
  { "key": "v", "command": "-magit.reverse-at-point" },
  { "key": "ctrl+v", "command": "magit.reverse-at-point", "when": "editorTextFocus && editorLangId == 'magit'" },
  { "key": "x", "command": "-magit.reset-mixed" },
  { "key": "ctrl+x", "command": "magit.reset-mixed", "when": "editorTextFocus && editorLangId == 'magit'" }
]
